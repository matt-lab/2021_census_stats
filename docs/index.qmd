---
title: "Characteristics of Australia"
subtitle: Data from the 2021 national census
date: 2023-02-03
date-format: long
author: Matthew Andreotta
format:
    html:
        toc: true
        theme:  flatly
echo:   false
include:    false
warning:    false
---

This webpage shares results from the the 2021 Australian census on age, sex, and household income.
This data may be useful for building survey samples representative of Australians.
In particular: @tbl-age-decades describes the proportion of Australians across age categories; @tbl-sex describes the proportion of Australians across sexes; and @tbl-income describes the annual household income of Australians.

Raw count data is provided in @tbl-counts-age-and-gender and @tbl-counts-income.

# Introduction

In 2021, the Australian Bureau of Statistics (ABS) conducted a census of Australians.
Methodology can be found on the [ABS' website](https://www.abs.gov.au/census/guide-census-data/census-methodology/2021).
For age, respondents were asked their date of birth or age.
For sex, respondents were asked to select whether the person was: "male", "female", or "non-binary sex".[^longnote]
For income, respondents were asked to report their total weekly income.
To calculate household income, the total weekly income was summed for each resident aged 15 years or older present in the household on Census Night.[^1]

In this document, I have used the same terminology as the census.

[^longnote]: **A word of warning**. As per ABS' [own words](https://www.abs.gov.au/articles/analysis-non-binary-sex-responses#2021-census-results):

    > The non-binary sex option was marked on the Census form for 43,220 respondents or 0.17% of the Australian population. Analysis indicates this number is not indicative of any single characteristic. Responses show the concept of non-binary sex was not consistently understood and was perceived in different ways by different people. Results cannot be used as a measure of gender diversity, non-binary genders or trans populations. Additionally, it cannot be used as a measure for diverse sexualities, nor can it be interpreted as the number of people with variations of sex characteristics.

    For these reasons and more, I have ignored non-binary sex responses when presenting sex statistics.

    I believe the age data used for the statistics in this document do not include respondents who selected the non-binary sex response.

[^1]: More information available at: [https://www.abs.gov.au/census/guide-census-data/census-dictionary/2021/variables-topic/income-and-work/equivalised-total-household-income-weekly-hied](https://www.abs.gov.au/census/guide-census-data/census-dictionary/2021/variables-topic/income-and-work/equivalised-total-household-income-weekly-hied).

```{r load-packages}
library(tidyverse) # data wrangling
library(gt) # tables
knitr::opts_knit$set(root.dir = '..') # change working directory when render
```


```{r helper-functions}
specify_decimal <- function(number_to_round, number_of_decimals = 2) {
    format(
        round(number_to_round, number_of_decimals),
        nsmall = number_of_decimals
    )
}
digit_text_to_number <- function(text) {
    digit_text <- c(
        "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"
    )
    as.integer(match(str_to_lower(text), digit_text) - 1)
}
```

```{r load-data}
data <- read_csv(
        file = "data/2021_sex-and-age.csv",
        col_names = c("age", "male", "female", "total"),
        skip = 1,
    )
data_income <- read_csv(
    file = "data/2021_household-income.csv",
    col_names = c("income", "total"),
    col_types = cols_only(
        income = col_character(),
        total = col_double()),
    skip = 11,
    n_max = 37 - 12)
data_education <- read_csv(
    file = "data/2021_education.csv",
    col_names = c("age", "education_code", "n"),
    col_types = cols_only(
        education_code = col_character(),
        age = col_integer(),
        n = col_integer()),
    skip = 11,
    n_max = 1775 - 12
    ) |>
    fill(age, .direction = "down") |>
    mutate(education_code = map(education_code, str_split_1, "")) |>
    unnest_wider(education_code, names_sep = "_")
data_dwelling <- read_csv(
    file = "data/2021_dwellings.csv",
    col_names = c("dwelling_size", "total"),
    col_types = cols_only(
        dwelling_size = col_character(),
        total = col_integer()),
    skip = 11,
    n_max = 21 - 12) |>
    mutate(dwelling_size = map_chr(dwelling_size, ~ str_split_1(.x, " ")[1])) |>
    mutate(dwelling_size = digit_text_to_number(dwelling_size)) |>
    arrange(dwelling_size) |>
    filter(!is.na(dwelling_size)) 

```

# Sex and age

## Age

```{r tbl-age-decades}
#| include: true
#| tbl-cap: The total count and proportion of Australian's age, categorised in decade-wide age groups.
#| label: tbl-age-decades
data |>
    mutate(age_group = case_when(
        age < 30                ~ "18-29",
        age >= 30 & age < 40    ~ "30-40",
        age >= 40 & age < 50    ~ "40-50",
        age >= 50 & age < 60    ~ "50-60",
        age >= 60 & age < 70    ~ "60-70",
        age >= 70               ~ "70+",
    )) |>
    group_by(age_group) |>
    summarise(total = sum(total)) |>
    ungroup() |>
    mutate(percentage = specify_decimal(total / sum(total) * 100)) |>
    select(age_group, total, percentage) |>
    mutate(total = prettyNum(total, big.mark = ",")) |>
    rename_with(str_to_sentence) |>
    gt() |>
    tab_style(
        locations = cells_column_labels(columns = everything()),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_body(columns = "Age_group"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_options(table.border.top.style = "hidden") |>
    cols_label(
        Age_group = "Age (Years)",
        Percentage = "Proportion (%)"    
    )
```

## Sex

```{r tbl-sex}
#| include: true
#| tbl-cap: The total count and proportion of Australian's sex.
#| label: tbl-sex
data |>
    select(-age, -total) |>
    summarise(across(everything(), sum)) |>
    pivot_longer(
        everything(),
        names_to = "sex",
        values_to = "total"
    ) |>
    mutate(sex = str_to_sentence(sex)) |>
    mutate(percentage = specify_decimal(total / sum(total) * 100)) |>
    select(sex, total, percentage) |>
    arrange(desc(total)) |>
    mutate(total = prettyNum(total, big.mark = ",")) |>
    rename_with(str_to_sentence) |>
    gt() |>
    tab_style(
        locations = cells_column_labels(columns = everything()),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_body(columns = "Sex"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_options(table.border.top.style = "hidden") |>
    cols_label(
        Percentage = "Proportion (%)"    
    )
```

## Cross-tabulating age and sex

```{r tbl-sex-and-age}
#| include: true
#| tbl-cap: Sex of Australians as a proportion of each decade-wide age group.
#| label: tbl-sex-and-age
data |>
    mutate(age_group = case_when(
        age < 30                ~ "18-29",
        age >= 30 & age < 40    ~ "30-40",
        age >= 40 & age < 50    ~ "40-50",
        age >= 50 & age < 60    ~ "50-60",
        age >= 60 & age < 70    ~ "60-70",
        age >= 70               ~ "70+",
    )) |>
    select(-age, -total) |>
    group_by(age_group) |>
    summarise(across(male:female, sum)) |>
    pivot_longer(
        male:female,
        names_to = "sex",
        values_to = "total"
    ) |>
    group_by(age_group) |>
    mutate(percentage = specify_decimal(total / sum(total) * 100)) |>
    select(-total) |>
    pivot_wider(names_from = "sex", values_from = "percentage") |>
    relocate(female, .before = male) |>
    ungroup() |>
    gt() |>
    tab_spanner(
        label = "Proportion (%)",
        columns = c("female", "male"),
    ) |>
    tab_options(table.border.top.style = "hidden") |>
    cols_label(
        age_group = "Age",
        male = "Male",
        female = "Female"
    ) |>
    tab_style(
        locations = cells_body(columns = "age_group"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_labels(),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_spanners(),
        style = list(
            cell_text(weight = "bold")
        )
    )
```

```{r tbl-counts-age-and-gender}
#| include: true
#| tbl-cap: Total number of Australians by age and sex.
#| label: tbl-counts-age-and-gender

tbl_counts <- data |>
    mutate(across(any_of(c("female", "male", "total")), prettyNum, big.mark = ",")) |>
    relocate(female, .before = male) |>
    rename_with(str_to_sentence) |>
    gt() |>
    tab_style(
        locations = cells_column_labels(columns = everything()),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_body(columns = "Age"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_options(table.border.top.style = "hidden") |>
    cols_label(Age = "Age (Years)")

tbl_counts
```

# Income

## Annual income


```{r tbl-income}
#| include: true
#| tbl-cap: The total count and proportion of annual household income in Australia.
#| label: tbl-income
tbl_income <- data_income |>
    mutate(income = case_when(
        income == "Negative income" ~ "less or $-1 (less or $-1)", 
        income == "Nil income"      ~ "$0-$0 ($0-$0)",
        TRUE                        ~ income
    )) |>
    filter(str_detect(income, "^\\$|^less")) |>
    separate(
        income,
        into = c("income_week", "income"),
        sep = " \\(") |>
    select(-income_week) |>
    mutate(income = str_remove_all(income, "\\)$")) |>
    separate(
        income,
        into = c("low", "high"),
        sep = "(-\\$)|( or )") |>
    mutate(
        across(
            high:low,
            ~ as.double(str_remove_all(.x, "\\$|,"))))


thresholds_income <- c(
    26000, 52000, 65000, 78000, 104000, 130000, 156000, 234000
)

tbl_income  |>
    mutate(thresholds = low %in% thresholds_income | high %in% thresholds_income) |>
    mutate(thresholds_code = cumsum(thresholds)) |>
    group_by(thresholds_code) |>
    summarise(
        low = min(low),
        high = max(high),
        total = sum(total)
    ) |>
    mutate(income = case_when(
        is.na(low) ~ str_c("$", prettyNum(high, big.mark=","), " or less"),
        is.na(high) ~ str_c("$", prettyNum(low, big.mark=","), " or more"),
        TRUE    ~ str_c("$", prettyNum(low, big.mark=","), "-", "$", prettyNum(high, big.mark=","))
    )) |>
    select(income, total) |>
    mutate(percentage = specify_decimal(total / sum(total) * 100)) |>
    mutate(total = prettyNum(total, big.mark = ",")) |>
        ungroup() |>
    gt() |>
    tab_options(table.border.top.style = "hidden") |>
    tab_style(
        locations = cells_body(columns = "income"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_labels(),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_spanners(),
        style = list(
            cell_text(weight = "bold")
        )
    )  |>
    cols_label(
        income = "Annual household income",
        total = "Total households",
        percentage = "Proportion of Households (%)")
```


## Weekly income

```{r tbl-counts-income}
#| include: true
#| tbl-cap: Total income per household.
#| label: tbl-counts-income
tbl_counts_income <- data_income |>
    mutate(total = prettyNum(total, big.mark = ",")) |>
    rename_with(str_to_sentence) |>
    gt() |>
    tab_style(
        locations = cells_column_labels(columns = everything()),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_body(columns = "Income"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_options(table.border.top.style = "hidden") |>
    cols_label(Income = "Weekly income (annual income)")

tbl_counts_income
```

# Highest level of educational attainment

```{r tbl-education}
#| include: true
#| tbl-cap: The total count and proportion of highest level of educational attainment in Australia.
#| label: tbl-education

education_level <- c(
    "Doctoral degree",
    "Postgraduate or masters degree",
    "Graduate diploma",
    "Bachelor's degree",
    "Certificate III or IV, diploma or advanced diploma",
    "Year 10 or above, or Certificate I or II",
    "Year 9 or below",
    "Not stated or specified"
)

data_education |>
    mutate(
        education =
            case_when(
                education_code_1 == "1" & education_code_2 == "1"
                    ~ education_level[1],
                education_code_1 == "1"
                    ~ education_level[2],
                education_code_1 == "2"
                    ~ education_level[3],
                education_code_1 == "3"
                    ~ education_level[4],
                education_code_1 %in% c("4", "5")
                    ~ education_level[5],
                education_code_1 %in% c("6", "7")
                    ~ education_level[6],
                education_code_1 == 8
                    ~ education_level[7],
                TRUE ~ education_level[8]
            )
    ) |>
    mutate(education = factor(education, levels = education_level)) |>
    group_by(education) |>
    summarise(total = sum(n)) |>
    mutate(percentage = specify_decimal(total / sum(total) * 100)) |>
    # Build table
    mutate(total = prettyNum(total, big.mark = ",")) |>
    gt() |>
    tab_options(table.border.top.style = "hidden") |>
    tab_style(
        locations = cells_body(columns = "education"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_labels(),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_spanners(),
        style = list(
            cell_text(weight = "bold")
        )
    )  |>
    cols_label(
        education = "Level of highest educational attainment",
        total = "Total adults",
        percentage = "Proportion (%)"
    )
```

# Household size

```{r}
#| label: descriptives-household-size
#| include: false

mean_household_size <-
    data_dwelling |>
        mutate(total_people = total * dwelling_size) |>
        summarise(mean = sum(total_people) / sum(total)) |>
        pull(mean) |>
        specify_decimal()
```

An average of `r mean_household_size` people live in each Australian household.

```{r tbl-household-size}
#| include: true
#| tbl-cap: The total count and proportion of the number of people living in each household.
#| label: tbl-household-size

data_dwelling |>
    filter(!is.na(dwelling_size)) |>
    mutate(
        cumsum_total = rev(cumsum(rev(total))),
        per_cumsum_total = specify_decimal(cumsum_total / sum(total) * 100)    
    ) |>
    mutate(
        dwelling_size = 
            str_c(
                dwelling_size,
                " or more people"
            )
    ) |>
    # Make table
    mutate(cumsum_total = prettyNum(cumsum_total, big.mark = ",")) |>
    gt() |>
    tab_options(table.border.top.style = "hidden") |>
    tab_style(
        locations = cells_body(columns = "dwelling_size"),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_labels(),
        style = list(
            cell_text(weight = "bold")
        )
    ) |>
    tab_style(
        locations = cells_column_spanners(),
        style = list(
            cell_text(weight = "bold")
        )
    )  |>
    cols_label(
        dwelling_size = "Household size",
        cumsum_total = "Total households",
        per_cumsum_total = "Proportion of households (%)"
    ) |>
    cols_hide(
        total
    )
```